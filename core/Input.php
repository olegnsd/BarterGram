<?phpnamespace dvijok\core;class Input {			public function clearScript(&$html) {				if(!$html){return $html;}		/*		$dom = new DOMDocument();		$dom->loadHTML($html);		$script = $dom->getElementsByTagName('script');		$remove = [];		foreach($script as $item)		{		  $remove[] = $item;		}		foreach ($remove as $item)		{		  $item->parentNode->removeChild($item); 		}		$html = $dom->saveHTML();				return $html;		*/		$html = preg_replace('/<script(.*?)>(.*?)<\/script>/i', '', $html);		$config = \HTMLPurifier_Config::createDefault();		$filter = new \HTMLPurifier($config);		$html = $filter->purify($html);			}			public $filterTags = true;	public function post($key = false, $filter = true) {				if(!$key)		{			if($filter)			{				array_walk_recursive($_POST, array($this, 'clearScript'));			}						return $_POST;		}		if($this->filterTags && $filter)		{			if($key && isset($_POST[$key]))			{				if(is_array($_POST[$key]))				{					array_walk_recursive($_POST[$key], array($this, 'clearScript'));					return $_POST[$key];				}				$this->clearScript($_POST[$key]);				return $_POST[$key];			}			else			{								return false;			}		}		else		{			if($key && isset($_POST[$key]))			{				return $_POST[$key];			}			else			{								return false;							}		}	}		public function get($key = false, $filter = false) {				if(!$key)		{			if($filter)			{				array_walk_recursive($_GET, array($this, 'clearScript'));			}			return $_GET;		}		if($this->filterTags && $filter)		{			if($key && isset($_GET[$key]))			{				if(is_array($_GET[$key]))				{					array_walk_recursive($_GET[$key], array($this, 'clearScript'));					return $_GET[$key];				}				$this->clearScript($_GET[$key]);				return $_GET[$key];			}			else			{								return false;			}		}		else		{			if($key && isset($_GET[$key]))			{				return $_GET[$key];			}			else			{								return false;							}		}	}}